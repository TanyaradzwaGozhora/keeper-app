{"ast":null,"code":"var LazyWrapper = require('./_LazyWrapper'),\n    arrayPush = require('./_arrayPush'),\n    arrayReduce = require('./_arrayReduce');\n/**\n * The base implementation of `wrapperValue` which returns the result of\n * performing a sequence of actions on the unwrapped `value`, where each\n * successive action is supplied the return value of the previous.\n *\n * @private\n * @param {*} value The unwrapped value.\n * @param {Array} actions Actions to perform to resolve the unwrapped value.\n * @returns {*} Returns the resolved value.\n */\n\n\nfunction baseWrapperValue(value, actions) {\n  var result = value;\n\n  if (result instanceof LazyWrapper) {\n    result = result.value();\n  }\n\n  return arrayReduce(actions, function (result, action) {\n    return action.func.apply(action.thisArg, arrayPush([result], action.args));\n  }, result);\n}\n\nmodule.exports = baseWrapperValue;","map":null,"metadata":{},"sourceType":"script"}